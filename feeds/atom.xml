<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jérôme Steunou</title><link href="http://www.jeromesteunou.net/" rel="alternate"></link><link href="http://www.jeromesteunou.net/feeds/atom.xml" rel="self"></link><id>http://www.jeromesteunou.net/</id><updated>2014-08-10T00:00:00+02:00</updated><entry><title>Internationalization in JavaScript</title><link href="http://www.jeromesteunou.net/internationalisation-in-javascript.html" rel="alternate"></link><updated>2014-08-10T00:00:00+02:00</updated><author><name>Jérôme Steunou</name></author><id>tag:www.jeromesteunou.net,2014-08-10:internationalisation-in-javascript.html</id><summary type="html">&lt;p&gt;I just released &lt;a href="https://github.com/JSteunou/grunt-jspot"&gt;grunt-jspot&lt;/a&gt; yesterday, a simple grunt task for &lt;a href="https://github.com/praekelt/jspot"&gt;jspot&lt;/a&gt;, an extraordinary gettext extractor tool for JavaScript.&lt;/p&gt;
&lt;p&gt;jspot is like the missing piece I was looking for so long to do internationalization in JavaScript. I mean, real internationalization, using standard and stuff.&lt;/p&gt;
&lt;p&gt;But talking about it make me realize internationalization is not well understood and seems like a very difficult beast to harness for JavaScript application.&lt;/p&gt;
&lt;p&gt;I hope this tutorial could help a lot and make developers use internationalization everywhere without fear. &lt;/p&gt;
&lt;h2&gt;Big picture&lt;/h2&gt;
&lt;h3&gt;What is internationalization?&lt;/h3&gt;
&lt;p&gt;I will just quote &lt;a href="http://en.wikipedia.org/wiki/Internationalization_and_localization"&gt;Wikipedia&lt;/a&gt;, because it sum it up very well:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Internationalization is the process of designing a software application so that it can potentially be adapted to various languages and regions without engineering changes. Localization is the process of adapting internationalized software for a specific region or language by adding locale-specific components and translating text.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So you will design your application in a way it can display&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hello world!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Salut tout le monde !&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Internationalization is often see as &lt;em&gt;i18n&lt;/em&gt;. Yeah, lazy developers that can not write a long word :p&lt;/p&gt;
&lt;h3&gt;What is the difference with localization?&lt;/h3&gt;
&lt;p&gt;It's more about adapting your format to regional specifications. Date format, currency, numbers are good example.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$9,999.99&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;99 999,99 $&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Localization is often see as l10n. Lazy is good :)&lt;/p&gt;
&lt;h3&gt;What is gettext?&lt;/h3&gt;
&lt;p&gt;Again, thank you &lt;a href="http://en.wikipedia.org/wiki/Gettext"&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;gettext is an internationalization and localization (i18n) system commonly used for writing multilingual programs on Unix-like computer operating systems. The most commonly used implementation of gettext is GNU gettext, released by the GNU Project in 1995.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It is very common and standard so it's interesting to use it. Translators know how to deal with files it generates and it has nice features like &lt;em&gt;pluralization&lt;/em&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Wow, why do I have to care about pluralization?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Because plurals do not follow the same rules for each language! For example, in English 0 (zero) is plural, whereas it is singular in French. Irish could have 4 plurals form. That's why good pluralization feature is very important.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Is gettext gonna translate for me?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hell no! Gettext will expose a standard so all your application words and sentences could fit together in a &lt;em&gt;dictionary&lt;/em&gt;. Then translators will create a &lt;em&gt;catalog&lt;/em&gt; per language you wanna expose into your application and your application will read those catalogs with the gettext API.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Show me how it works in a software!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ok, first, the big picture, please dont run away, it's easier than it's look like ;)&lt;/p&gt;
&lt;p&gt;&lt;span class="center"&gt;
&lt;img alt="gettext" src="http://www.jeromesteunou.net/static/images/gettext.png" title="gettext scheme" /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;Concrete example in JavaScript&lt;/h2&gt;
&lt;h3&gt;Using a gettext JavaScript implementation&lt;/h3&gt;
&lt;p&gt;Looking at the presentation above, you see you need a JavaScript implementation of gettext. I will use &lt;a href="http://slexaxton.github.io/Jed/"&gt;Jed&lt;/a&gt;. But you are free to use whatever you like. That's the beauty of this system, each tool at each step can be changed by another tool if you want.&lt;/p&gt;
&lt;p&gt;Remember, the gettext implementation will need to load a catalog and will expose a gettext API.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// I will show you later how to really load a catalog&lt;/span&gt;
&lt;span class="c1"&gt;// + some more specific cases&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;myFrenchCatalog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fr&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i18n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Jed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myFrenchCatalog&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;translation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;gettext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hello world!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;translation&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Salut tout le monde !&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You are now using gettext!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;myFrenchCatalog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;fr&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// no translation, for example english selected&lt;/span&gt;
&lt;span class="c1"&gt;// and your keys are already good english&lt;/span&gt;
&lt;span class="c1"&gt;// or you just wanna start playing with Jed without catalogs&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i18n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Jed&lt;/span&gt;&lt;span class="p"&gt;({});&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;translation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ngettext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;apple&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;apples&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;translation&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;apples&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;// true &amp;amp; plural&lt;/span&gt;

&lt;span class="c1"&gt;// fr translation, french selected&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i18n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Jed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myFrenchCatalog&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;translation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ngettext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;apple&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;apples&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;translation&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pomme&amp;#39;&lt;/span&gt; &lt;span class="c1"&gt;// true &amp;amp; singular&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You are now using pluralization!&lt;/p&gt;
&lt;p&gt;Alright, you just have seen the right part of the schema above. You know how to start a gettext implementation and how to use the gettext API in your JavaScript application. (not all of it, but the essential :p)&lt;/p&gt;
&lt;h3&gt;Using a gettext extractor to create your dictionary&lt;/h3&gt;
&lt;p&gt;I will suppose you know how to use &lt;a href="http://gruntjs.com"&gt;Grunt&lt;/a&gt; inside your project. We will use the &lt;a href="https://github.com/praekelt/jspot"&gt;jspot&lt;/a&gt; gettext extractor with &lt;a href="https://github.com/JSteunou/grunt-jspot"&gt;grunt-jspot&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are not using Grunt, jspot can also be used in JavaScript or command line.&lt;/p&gt;
&lt;p&gt;After the classic &lt;code&gt;npm install grunt-jspot&lt;/code&gt;, in your project's Gruntfile, add a section named jspot to the data object passed into grunt.initConfig().&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;grunt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initConfig&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;jspot&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;myCoolProject&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;locales&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;src/**/*.js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;            
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;grunt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loadNpmTasks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;grunt-jspot&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If your application contains a call to gettext like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;gettext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hello World!&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Running &lt;code&gt;grunt jspot&lt;/code&gt; generate you a file &lt;code&gt;locales/messages.pot&lt;/code&gt; and it certainly looks like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;msgid&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;msgstr&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;POT-Creation-Date: 2014-08-09 05:32:+0000&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;Project-Id-Version: PACKAGE VERSION&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;Language-Team: LANGUAGE &amp;lt;LL@li.org&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;Language: &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;MIME-Version: 1.0&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;Content-Type: text/plain; charset=utf-8&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;Content-Transfer-Encoding: 8bit&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s"&gt;&amp;quot;PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;

&lt;span class="cp"&gt;#: app.js:1&lt;/span&gt;
&lt;span class="n"&gt;msgid&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Hello World!&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;msgstr&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That's it. Your dictionary is ready. And yeah it's what we called a &lt;strong&gt;pot&lt;/strong&gt; file. Please do not edit it manually. Like never! Its format is very important.&lt;/p&gt;
&lt;h3&gt;Generate catalogs and keeping them updated&lt;/h3&gt;
&lt;p&gt;You had seen how Jed exposes the gettext API and uses catalogs. You had seen how jspot creates the dictionary &lt;em&gt;pot&lt;/em&gt; file. One more step, how to generates catalogs:&lt;/p&gt;
&lt;p&gt;Two way, the easy way, or the... Nah. Both are easy, depending on what you are use to.&lt;/p&gt;
&lt;p&gt;If you remember, and read Wikipedia, gettext has a well known implementation as GNU Gettext which comes with Linux. In fact, in most Linux distributions we have commands likes &lt;code&gt;msginit&lt;/code&gt;, &lt;code&gt;msgmerge&lt;/code&gt;, ... These are gettext commands. &lt;code&gt;msginit&lt;/code&gt; is for creating a new catalog and &lt;code&gt;msgmerge&lt;/code&gt; is for updating a catalog with all new entries from an updated dictionary.&lt;/p&gt;
&lt;p&gt;But I will told you about the graphical way, which allow me to show you how to translate too :)&lt;/p&gt;
&lt;p&gt;The tool I'm using to create and manage my catalogs is &lt;a href="http://poedit.net/"&gt;POEdit&lt;/a&gt;. It's free, open source, and runs on different OS.&lt;/p&gt;
&lt;p&gt;Launch it, and go in file &amp;gt; New from pot file (or a thing like that). Select your dictionary previously created and fill in some information. Do not forget to fill in the &lt;a href="http://docs.translatehouse.org/projects/localization-guide/en/latest/l10n/pluralforms.html?id=l10n/pluralforms"&gt;correct plural form&lt;/a&gt; for you catalog.&lt;/p&gt;
&lt;p&gt;&lt;span class="center"&gt;
&lt;img alt="poeditinit" src="http://www.jeromesteunou.net/static/images/poedit_init.png" title="create a catalog from pot" /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;There is also a catalog manager, which help you to: see your catalogs per project, update your catalogs when the dictionary was updated, see your catalogs status (green: translation = 100%).&lt;/p&gt;
&lt;p&gt;&lt;span class="center"&gt;
&lt;img alt="poeditcatalog" src="http://www.jeromesteunou.net/static/images/poedit_catalog.png" title="catalog manager" /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Select a catalog to edit it and update translations. For a translation with singular &amp;amp; plural keys, you just have to fill the different possible forms the language can have without bothering about &lt;em&gt;when&lt;/em&gt; to use it. Gettext will handle it for you.&lt;/p&gt;
&lt;p&gt;&lt;span class="center"&gt;
&lt;img alt="poedittranslate" src="http://www.jeromesteunou.net/static/images/poedit_translate.png" title="using poedit to translate" /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Now you know about creating and updating catalogs but also translate your application!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hey, one last thing, catalogs are .po or .mo files. Jed only read JSON!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;True! I told you I will show you how to load catalogs in Jed&lt;/p&gt;
&lt;h3&gt;Last step! Convert your catalogs into JSON&lt;/h3&gt;
&lt;p&gt;This one is so easy. &lt;a href="https://github.com/rockykitamura/grunt-po2json"&gt;grunt-po2json&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And again, if you are not using Grunt, you can just use &lt;a href="https://github.com/mikeedwards/po2json"&gt;po2json&lt;/a&gt; directly or jspot which include po2json too.&lt;/p&gt;
&lt;p&gt;After the classic &lt;code&gt;npm install grunt-po2json&lt;/code&gt;, in your project's Gruntfile, add a section named po2json to the data object passed into grunt.initConfig().&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;grunt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initConfig&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;po2json&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;myCoolProject&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;locales/*.po&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="nx"&gt;dest&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;locales/&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;pretty&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;jed&amp;#39;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;grunt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loadNpmTasks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;grunt-po2json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;format: 'jed'&lt;/code&gt; option matters because it will wrap the generated object into jed options. With this you will just have to write &lt;code&gt;new Jed(myCatalog)&lt;/code&gt; instead of &lt;code&gt;new Jed({domain: 'myDomain', locale_data: MyCatalog})&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;About how to load the catalog, I will leave this to what you prefer. You can &lt;code&gt;var frCatalog = require('./locales/fr');&lt;/code&gt; if you are using CommonJS syntax, or &lt;code&gt;define['json!./locales/fr.json', ...], frCatalog, ...&lt;/code&gt; if you are using AMD syntax. Or just use ajax if you are not really in modules.&lt;/p&gt;
&lt;p&gt;That's it! I think if you are looking at the schema above, the circle is complete by now.&lt;/p&gt;
&lt;p&gt;&lt;span class="center"&gt;
&lt;img alt="gettextend" src="http://www.jeromesteunou.net/static/images/gettext_end.png" title="gettext end scheme" /&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;Bonus&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;I'm using Handlebars, can I extract gettext strings from it with jspot?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Sure you can!&lt;/p&gt;
&lt;p&gt;Supposing &lt;code&gt;i18n&lt;/code&gt; is your Jed instance. Add a helper like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;Handlebars&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;registerHelper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gettext&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// arguments = in template params + a handlebars hash&lt;/span&gt;
    &lt;span class="c1"&gt;// this = in template context&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;gettext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;Handlebars&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;registerHelper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gettext.ngettext&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// arguments = in template params + a handlebars hash&lt;/span&gt;
    &lt;span class="c1"&gt;// this = in template context&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ngettext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Use it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;{{gettext &amp;quot;I&amp;#39;m singular&amp;quot; }}&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;{{gettext.ngettext &amp;quot;cat&amp;quot; &amp;quot;cats&amp;quot; much }}&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And configure your grunt task to add Handlebars files. Those files must end with &lt;code&gt;.hbs&lt;/code&gt;. (This will be configurable very soon).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;grunt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;initConfig&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;jspot&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;myCoolProject&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;locales&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;src/**/*.js&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;src/**/*.hbs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;            
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;grunt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loadNpmTasks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;grunt-jspot&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;I'm using Underscorejs template, can I extract gettext string from it with jspot?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Not yet! But jspot can extract string from JavaScript very well. It also can have external extractors attached to its main extractor. As Underscore compiles templates in pure JavaScript, with source attached, a &lt;code&gt;jspot-underscore-extractor&lt;/code&gt; will land very soon :)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I'm using XXX template engine, can I extract gettext string from it with jspot?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Not yet! Like for Underscore template, if it generates pure JavaScript, an external extractor should be easy to write. Contribution into &lt;a href="https://github.com/JSteunou/grunt-jspot"&gt;grunt-jspot&lt;/a&gt; and &lt;a href="https://github.com/praekelt/jspot"&gt;jspot&lt;/a&gt; are welcome.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;How can I handle numbers in plural sentences?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;With the &lt;em&gt;sprintf&lt;/em&gt; tool. An implementation exists for JavaScript and you have it directly with Jed: &lt;code&gt;Jed.sprintf&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;numToasters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;translation&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Jed&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i18n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ngettext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;I have one toaster.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;I have %d toasters.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;numToasters&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;numToasters&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// I have 3 toasters&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Translators will see &lt;code&gt;I have %d toasters.&lt;/code&gt; as the plural key for this entry and will have to let the &lt;code&gt;%d&lt;/code&gt; but can put it anywhere in the sentence. This is useful because some language do not have the same words order than English.
You can also use positional syntax if you have more than one number in your sentence and care about order in other languages. http://www.diveintojavascript.com/projects/javascript-sprintf&lt;/p&gt;
&lt;p&gt;Moreover, you can do the same into Handlebars, thanks to Handlebars sub-expressions. Supposing you had registered a &lt;em&gt;sprintf&lt;/em&gt; helper&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;{{sprintf (gettext.ngettext &amp;quot;%d cat&amp;quot; &amp;quot;%d cats&amp;quot; much) much }}&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="javascript"></category><category term="i18n"></category></entry><entry><title>Browserify, why and how?</title><link href="http://www.jeromesteunou.net/browserify-why-and-how.html" rel="alternate"></link><updated>2014-03-16T00:00:00+01:00</updated><author><name>Jérôme Steunou</name></author><id>tag:www.jeromesteunou.net,2014-03-16:browserify-why-and-how.html</id><summary type="html">&lt;p&gt;In this first article of &lt;a href="recipe-for-marionette-handlebars-browserify-grunt.html"&gt;my series on marionetteify&lt;/a&gt;, I will go through the why I choose Browserify over RequireJS and how using it.&lt;/p&gt;
&lt;h2&gt;NPM: Node Packaged Modules&lt;/h2&gt;
&lt;p&gt;A little parenthesis on &lt;code&gt;npm&lt;/code&gt;. When you have big project, you have a big &lt;em&gt;vendors&lt;/em&gt; folder. And it is painful to keep those libraries up to date. That is why in a lot of environment you have a package manager. JavaScript got none a while ago. But with NodeJS comes &lt;a href="https://www.npmjs.org"&gt;npm&lt;/a&gt;, then &lt;a href="http://bower.io/"&gt;bower&lt;/a&gt; for the front-end trying to mimic npm. At this time, npm could not easily be used for front-end development because there was no tools handling CommonJS alike modules, only AMD. Too bad, because I find npm more powerful, acting like a real package manager with a repository while can also consume github and local files. &lt;a href="http://browserify.org/"&gt;Browserify&lt;/a&gt; was the solution. It plays by default very well with node modules, handle by npm. This couple is like an evidence.&lt;/p&gt;
&lt;h2&gt;Browserify&lt;/h2&gt;
&lt;p&gt;On the &lt;a href="http://todomvc.com/"&gt;TodoMVC&lt;/a&gt; project you have some good examples with module loaders. But there are all with RequireJS. AMD &amp;amp; RequireJS is a good way to keep your application organized, but I am just tired of RequireJS. Like &lt;a href="http://blog.m4nu.co/the-requirejs-itches-and-how-i-scratched-them-with-browserify/?utm_source=javascriptweekly&amp;amp;utm_medium=email"&gt;M4nu&lt;/a&gt; and so many people, we see too many flows with the AMD way.&lt;/p&gt;
&lt;p&gt;And &lt;a href="http://espadrine.github.io/New-In-A-Spec/es6/"&gt;ES6&lt;/a&gt; is coming with &lt;a href="http://blog.ponyfoo.com/2013/12/23/architecture-of-ecmascript-6-modules"&gt;module&lt;/a&gt; functionality, that is not helping. Like so many I like working with new shiny tools, and ES6 is so promising that I want it now. But even when it will be officially supported by some vendors, there will always be legacy browsers.&lt;/p&gt;
&lt;p&gt;So &lt;a href="http://browserify.org"&gt;Browserify&lt;/a&gt;. I tried once upon a time. I failed. Not because of Browserify, because of packages. Bower &amp;amp; npm was already there but packages played not well together. All the &lt;code&gt;packages.json&lt;/code&gt; was incomplete or missing or messed up.&lt;/p&gt;
&lt;p&gt;Today, jQuery, Backbone &amp;amp; Underscore releases are AMD / CJS compatible, Backbone.Marionette dependencies play well... and they are all available on &lt;a href="https://www.npmjs.org"&gt;npm&lt;/a&gt;. How can I resist to move from RequireJS? I just cannot.&lt;/p&gt;
&lt;p&gt;So I did:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;npm&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt;
&lt;span class="n"&gt;npm&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;backbone&lt;/span&gt; &lt;span class="n"&gt;backbone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;marionette&lt;/span&gt; &lt;span class="n"&gt;jquery&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and start writing &lt;a href="https://github.com/JSteunou/marionetteify"&gt;marionetteify&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Build&lt;/h2&gt;
&lt;p&gt;So how it works? Very briefly, you just write your app.js like a NodeJS module.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// Vendors&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;jquery&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;Backbone&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;backbone&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;Backbone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;Marionette&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;backbone.marionette&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// app bootstrap&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Marionette&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;// ...&lt;/span&gt;
&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;Backbone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;history&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;then you just build&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;browserify&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;bundle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Transform&lt;/h2&gt;
&lt;p&gt;And there is more! Not only the code is shorter, more readable, without tons of configuration but it comes with one killer feature: &lt;em&gt;transform&lt;/em&gt;, quite like RequireJS plugins system but... just more. More plugins, more simpler, more possibilities...&lt;/p&gt;
&lt;p&gt;With the &lt;code&gt;--transform&lt;/code&gt; or &lt;code&gt;-t&lt;/code&gt; option and some great plugins you can load not only JavaScript CommonJS module but anything that have a transform plugin. &lt;a href="https://github.com/epeli/node-hbsfy"&gt;Handlebars templates&lt;/a&gt;, &lt;a href="https://github.com/jnordberg/coffeeify"&gt;coffeescript modules&lt;/a&gt;, &lt;a href="https://www.npmjs.org/package/amdify"&gt;AMD modules&lt;/a&gt;, ... &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;browserify&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;hbsfy&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;coffeeify&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;bundle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And voilà, you can require template in your application and write modules in coffeescript.&lt;/p&gt;
&lt;h2&gt;External &amp;amp; require&lt;/h2&gt;
&lt;p&gt;Browserify differ from RequireJS on that it is not an Asynchronous loader. You have to build your application to play with it. Some says building on each modification is not fast enough so using Browserify is painful. But eh: &lt;em&gt;external&lt;/em&gt; &amp;amp; &lt;em&gt;require&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;First with the &lt;code&gt;--external&lt;/code&gt; or &lt;code&gt;-x&lt;/code&gt; option you can tell Browserify to not fetch some module and build without those. See what's coming? You can build your application without the vendors. Hooo~~ fast, very fast, and very light.&lt;/p&gt;
&lt;p&gt;Ok, but how to provide vendors module now? Yes, you got it, &lt;code&gt;--require&lt;/code&gt; or &lt;code&gt;-r&lt;/code&gt; option. You can build a bundle from nothing just by telling Browserify you want those modules inside.&lt;/p&gt;
&lt;p&gt;To sum up, you build&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;browserify&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;hbsfy&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;coffeeify&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;backbone&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;backbone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;marionette&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;jquery&lt;/span&gt; &lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dist&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;
&lt;span class="n"&gt;browserify&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="n"&gt;backbone&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="n"&gt;backbone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;marionette&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="n"&gt;jquery&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dist&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;vendors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;js&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and you consume&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;dist/vendors.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;dist/app.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That process will dramatically increased build time will coding.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;So why Browserify?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;quite close of ES6 module syntax&lt;/li&gt;
&lt;li&gt;same NodeJS syntax&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.npmjs.org/"&gt;npm&lt;/a&gt; power! (63 857 packages and growing)&lt;/li&gt;
&lt;li&gt;very simple but yet very powerful. External and require option are divine!&lt;/li&gt;
&lt;li&gt;great people that build great plugins. Once we taste the transform option to load Handlebars template, coffeescript, AMD, ... you can not go back!&lt;/li&gt;
&lt;li&gt;do not worry anymore about the A of AMD.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Just &lt;a href="http://browserify.org/"&gt;try it&lt;/a&gt; if you feel it can fit your needs, but you might not come back :)&lt;/p&gt;
&lt;p&gt;&lt;img alt="browserify" src="http://www.jeromesteunou.net/static/images/browserify.png" title="browserify" /&gt;&lt;/p&gt;</summary><category term="javascript"></category><category term="browserify"></category></entry><entry><title>Recipe of a production ready Marionette application</title><link href="http://www.jeromesteunou.net/recipe-for-marionette-handlebars-browserify-grunt.html" rel="alternate"></link><updated>2014-03-15T00:00:00+01:00</updated><author><name>Jérôme Steunou</name></author><id>tag:www.jeromesteunou.net,2014-03-15:recipe-for-marionette-handlebars-browserify-grunt.html</id><summary type="html">&lt;p&gt;I have been away of this blog for too long. New job, new house. The time goes pretty damn fast. In 6 months the JavaScript environment goes fast too!&lt;/p&gt;
&lt;p&gt;Today I come back with a new series of articles that will live along this project: &lt;a href="https://github.com/JSteunou/marionetteify"&gt;marionetteify&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It is based on the &lt;a href="http://todomvc.com"&gt;TodoMVC Project&lt;/a&gt;. The motivation behind this project is to bring an example of how a front-end JavaScript project can be serious and production ready.&lt;/p&gt;
&lt;p&gt;The main goal is to help JavaScript developers to catch up with the actual great tools and give a real word alike application structure with complete tool chain.&lt;/p&gt;
&lt;h2&gt;Featuring&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Backbone&lt;/li&gt;
&lt;li&gt;Backbone.Marionette&lt;/li&gt;
&lt;li&gt;Backbone.Localstorage&lt;/li&gt;
&lt;li&gt;Handlebars&lt;/li&gt;
&lt;li&gt;Jed (coming soon)&lt;/li&gt;
&lt;li&gt;Browserify&lt;/li&gt;
&lt;li&gt;Grunt for&lt;ul&gt;
&lt;li&gt;serving&lt;/li&gt;
&lt;li&gt;watching&lt;/li&gt;
&lt;li&gt;live-reloading&lt;/li&gt;
&lt;li&gt;building&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Running marionetteify&lt;/h2&gt;
&lt;p&gt;Just clone the project, or grab the zip, and run the index.html. There is nothing more and less than the classic TodoMVC application.&lt;/p&gt;
&lt;h2&gt;Walkthough the code&lt;/h2&gt;
&lt;p&gt;I am preparing a series of articles to explain the choice I made on &lt;code&gt;marionetteify&lt;/code&gt; and help you to understand the benefits of using those tools or concepts.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="browserify-why-and-how.html"&gt;npm &amp;amp; Browserify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Grunt&lt;/li&gt;
&lt;li&gt;Marionette modules&lt;/li&gt;
&lt;li&gt;i18n with Jed&lt;/li&gt;
&lt;li&gt;less / css&lt;/li&gt;
&lt;li&gt;Cordova&lt;/li&gt;
&lt;/ul&gt;</summary><category term="javascript"></category><category term="marionette"></category><category term="browserify"></category><category term="grunt"></category></entry><entry><title>Simplifions notre fonctionnement avec le Revenu de Base Inconditionnel</title><link href="http://www.jeromesteunou.net/le-revenu-de-base-inconditionnel-fr.html" rel="alternate"></link><updated>2013-09-22T00:00:00+02:00</updated><author><name>Jérôme Steunou</name></author><id>tag:www.jeromesteunou.net,2013-09-22:le-revenu-de-base-inconditionnel-fr.html</id><summary type="html">&lt;p&gt;L'idée d'un revenu de base (universel ou inconditionnel) fait son petit bonhomme de chemin, et le dernier billet de &lt;a href="http://ploum.net/pourquoi-vous-etes-sans-le-savoir-favorable-au-revenu-de-base/"&gt;Ploum&lt;/a&gt; en est un formidable exemple. J'aime beaucoup les articles de Ploum, et sa réflexion, &lt;a href="http://bien.ch/fr/page/faq-sur-revenu-de-base"&gt;ainsi que celle des suisses&lt;/a&gt;, ou de &lt;a href="http://future.arte.tv/fr/sujet/le-revenu-de-base-promesse-dun-avenir-meilleur"&gt;ces messieurs&lt;/a&gt; et les constats &lt;a href="http://fr.wikipedia.org/wiki/Revenu_de_base#Impl.C3.A9mentations"&gt;des différentes expériences&lt;/a&gt;, autour du RBI sont très intéressants.&lt;/p&gt;
&lt;p&gt;Le débat s'est installé autour d'une table avec des amis et nous sommes d'accords sur plusieurs points : le système français est une grosse machine poussive, coûteuse et injuste. Il y a du bon, mais ces derniers temps l'exaspération autour du moins bon gagne les français. Par contre, la solution du RBI, une des solutions pour améliorer le système, pose de multiples questions, dont une que je souhaitais développer en détail : &lt;/p&gt;
&lt;h2&gt;Comment verser 1000€ à tout le monde ?&lt;/h2&gt;
&lt;p&gt;Mais vous êtes fou, un communo-socialiste de la pire espèce, où allons nous trouver tout cet argent ? Ce n'est pas possible, plus personne ne voudra travailler, le pays va s'endetter encore plus, et puis il y aura encore plus de profiteurs, mais si, ceux qui ne font rien et gagnent plus que moi à coups d'alloc !&lt;/p&gt;
&lt;h2&gt;Le coût du RBI en France&lt;/h2&gt;
&lt;p&gt;La population française est grosso modo &lt;a href="http://www.insee.fr/fr/themes/document.asp?reg_id=0&amp;amp;id=3806"&gt;structurée ainsi en france&lt;/a&gt; 25% / 51% / 24% pour les tranches 0-19 ans / 20-59 ans / 60 ans et +, sur 66 millions de personnes. Ce qui nous ferait 594 milliard d'euros à verser par an pour donner le RBI au 2 dernières tranches.&lt;/p&gt;
&lt;p&gt;Et la première tranche ? Effectivement, il faut trouver un système qui remplacerait l'allocation familiale. Je suis pour la proposition de certain, d'un RBI pour les enfants, directement versé aux parents, et de le verser directement à l'enfant quand il quitte le foyer familial avant 20 ans. Cela remplacerait tout le système d'allocation rentrée, étudiant, familiale, etc. Admettons que l'État verse 250€ par mois par enfant, et 500€ à partir de 15 ans. Avec 16,5 millions de moins de 20 ans, si nous répartissons équitablement, nous arrivons à 62 milliards d'euros supplémentaires, et donc un total de 656 milliards d'euros de RBI par an.&lt;/p&gt;
&lt;p&gt;Avec &lt;a href="http://fr.wikipedia.org/wiki/Produit_int%C3%A9rieur_brut_de_la_France"&gt;un PIB de 2 032,3 milliards d'euros en 2012&lt;/a&gt;, le RBI représenterait &lt;strong&gt;32,28%&lt;/strong&gt; de notre PIB. C'est justement l'idée de certains, établir un montant relatif du RBI à 1/3 du PIB, pour diminuer le RBI en cas de baisse de création de valeurs pour forcer les gens à re-travailler et donc re-créer de la valeur.&lt;/p&gt;
&lt;p&gt;Aujourd'hui, nos dépenses publiques représentent &lt;strong&gt;56.9%&lt;/strong&gt; (&lt;a href="http://fr.wikipedia.org/wiki/Dépenses_publiques"&gt;prévisionnel 2013&lt;/a&gt;) du PIB, dont 20% des dépenses pour les régions, départements, communes. Si vous connaissez la part des dépenses que remplaceraient le RBI je suis preneur !&lt;/p&gt;
&lt;h2&gt;Et si nous simplifions aussi les prélèvements ?&lt;/h2&gt;
&lt;p&gt;Le RBI, ce n'est pas seulement donner un revenu de base de manière inconditionnel aux citoyens, c'est aussi simplifier à l'extrême les majorités des prestations sociales et mettre tout le monde sur un pied d'égalité au minimum. Mais il y a d'autres simplifications à faire en plus du système des dépenses, celui de la collecte des fonds :&lt;/p&gt;
&lt;p&gt;Un chiffre clé pris au hasard : 25%.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;TVA normal :&lt;/em&gt; 25% (et une seule TVA réduite à 5% pour les besoins de première nécessité comme la nourriture).&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Pour les salaires :&lt;/em&gt; 25%. Finie la cotisation patronale, salariale, l'impôt ceci, le versement cela... Le patron pourra voir ça comme une TVA sur l'achat d'un travail, le travailleur comme un impôt sur le revenu prélevé à la source. Finie la mise en opposition et les conflits entre représentants des patrons / salariés sur qui doit payer quoi.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Tous les autres revenus :&lt;/em&gt; 25%. Revenus issus de la rente, des intérêts bancaires, des loyers, de la bourse, des flux financiers inconnus arrivant de l'extérieur, ...&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Pour les personnes morales :&lt;/em&gt; 25%. Anciennement impôt sur les sociétés, ici il serait question de taxer directement le bénéfice des sociétés déclarant leur bénéfice en France. Plus de passe droit, plus d'exonération, fini la multiplication des régimes, fini les options ceci, options cela... Et pour les sociétés non basées en France ? On va encore se faire avoir avec tous ceux qui profitent des paradis fiscaux ! 25% sur le CA réalisé en France. Si elles veulent payer moins ça sera plus intéressant d'avoir une branche française qui déclare un bénéfice français. Avec contrôle à la clé et grosse amende pour les tricheurs qui minimisent le bénéfice ou CA français. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Regardons les revenus fiscaux &lt;a href="http://www.vie-publique.fr/animations/index3_impots.html"&gt;en 2011 de l'État&lt;/a&gt; : nous avons supprimé la TIPP et toutes les taxes diverses. (Fini l'essence hors de prix, l'impôt sur la fortune, le patrimoine, la taxe sur les supports de stockage qui fait que nous achetons nos DVD vierges à l'étranger, ...) Il nous reste un impôt sur les revenus, au sens large du terme, pour personnes physiques ou morales — sans discrimination, sans évasion, ... — et une taxe sur la consommation. Le tout avec un taux unique de 25% ! L'État manque de sous ? Le niveau de vie change, la monnaie fait des bonds, modifions le taux, mais le même, pour tous, plus de discrimination travail / consommation / investissement / ...&lt;/p&gt;
&lt;p&gt;Prenons un exemple concret, une entreprise de 10 personnes, PDG compris, qui paie ses salariés 1000€ net et son PDG le double. Coût salarial : 176 000€ par an. S'il n'a pas de charges extravagantes, nous pouvons supposer qu'au dessus de 200 000€ de CA, cette entreprise fait du bénéfice et contribue à hauteur de 25%. Il lui reste 75% de ce bénéfice pour investir et se développer ou augmenter ses salaires. Avec le RBI les salariés gagnent 2000€ et le PDF 3000€ net &lt;em&gt;après impôts&lt;/em&gt;. Essayez de faire la même chose avec le mille feuille actuel !&lt;/p&gt;
&lt;h2&gt;Transférer des prélèments issus du travail sur la consommation.&lt;/h2&gt;
&lt;p&gt;Mais 25% est-ce suffisant ? Ce taux arbitraire, je l'ai pris au hasard, juste pour illustrer un exemple de simplification du système, mais il s'avère qu'en y regardant de plus près il redonnerait à l'État peut être plus d'argent qu'actuellement, tout en réduisant de manière drastique ses coûts de fonctionnement en le réduisant à une version ultra simplifiée.&lt;/p&gt;
&lt;p&gt;Détaillons ensemble :&lt;/p&gt;
&lt;p&gt;La TVA qui rapportait 131.9 milliard en 2011 avec un taux moyen de 18.5% pourrait rapporter 170 milliards.&lt;/p&gt;
&lt;p&gt;Les impôts des personnes physiques, en gardant le même &lt;a href="http://www.insee.fr/fr/themes/document.asp?reg_id=0&amp;amp;ref_id=ip1464#inter1"&gt;salaire median&lt;/a&gt; serait de 5.3 milliard au plus bas pour la partie salaire, auquel il faudrait rajouter les impôts sur les revenus boursiers, bancaire, loyer, etc. Ça serait la plus grosse perte de l'État qui passerait d'un revenu de 51.4 milliard à peut être seulement 10 milliards pour les plus pessimistes. Mais d'un autre côté, taxer le travail, l'activité, la création n'est-il pas l'impôt le plus injuste ? Surtout que nous voulons un PIB important pour aller avec notre RBI.&lt;/p&gt;
&lt;p&gt;Les impôts des personnes morales rapportait 40 milliards en 2011. En taxant le bénéfice à 25% au lieu de 33.5%, ce revenu pourrait baisser et passer à 30 milliards. Mais le but ici n'est pas de diminuer l'impôt, plutôt d'harmoniser les taux et surtout de mieux gérer les prélèvements et d'être plus équitable. Pas de bénéfices, pas d'impôts. Non déclaration du bénéfice en France, taxe directement sur le CA français.&lt;/p&gt;
&lt;p&gt;Et on oublie la TIPP, les taxes diverses, fini tout ça ! Faisons les comptes : 170 + 10 + 30 = 210. Dans le pire des cas l'État ne gagnerait plus que 210 milliards, un manque à gagner de 34 milliards d'euros pour 2011 par exemple.&lt;/p&gt;
&lt;p&gt;Sachant que mes chiffres sont plutôt &lt;em&gt;pessimistes&lt;/em&gt;, 34 milliards en moins pour l'État, qui n'aurait plus à entretenir tout un système gargantuesque de gestion du chômage, des allocations, de retraites, de haute autorité, de gestion de la taxe sur les media, sur l'alcool, de la gestion des impôts avec ses 36 000 niches et subtilités, ... Si en plus de ça nous supprimons toutes les couches territoriales qui peuvent être supprimées pour ne garder que l'État central, les régions et les communautés de communes. Si encore par dessus ça nous simplifions les rouages de l'État législatif (qui a dit politicien ?) et diminuons leurs salaires et autres primes pour n'avoir plus qu'un salaire, un seul versement simple à niveau correct ; les 34 milliards d'euros d'économies à faire sur un total de plus de 900 milliards d'euros de dépenses publiques sont &lt;a href="https://www.google.com/search?q=%22cour+des+comptes%22+rapport+%C3%A9conomie+gaspillage"&gt;à porté de main&lt;/a&gt; ! Ce qui je le rappel, est une vision &lt;em&gt;pessimiste&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;C'est une solution miracle alors ?!&lt;/h2&gt;
&lt;p&gt;Miracle non, mais personnellement c'est une solution auquelle je crois. Il y a beaucoup d'autres facettes à étudier, et certains dont c'est le métier le font mieux que moi. Ce billet est vraiment grossier et naïf, je vous l'accorde. Je suis juste curieux de savoir qu'elle est la marge de progression possible &lt;a href="http://fr.wikipedia.org/wiki/Keep_it_Simple,_Stupid"&gt;en simplifiant notre système de prélèvement et de versement à l'extrême&lt;/a&gt; comme il serait possible de le faire avec le RBI + un taux unique de prélèvement. Après tout, sa gestion s'apparente à celle d'une entreprise et je pense sincèrement que l'État devrait être géré comme la meilleure — et meilleure ne veut pas dire plus compliquée, bien au contraire ! &lt;a href="http://fr.wikipedia.org/wiki/Keep_it_Simple,_Stupid"&gt;KISS²&lt;/a&gt; — entreprise de France. Des rentrées d'argent, des besoins, on alloue et... c'est tout ! Stop aux taxes particulières pour couvrir un besoin particulier (réel ou non, merci à certains lobbyistes).&lt;/p&gt;
&lt;p&gt;Je ne serai même pas étonné qu'il soit possible de diminuer de moitié le budget de fonctionnement interne ainsi. Il ne nous resterait que les 3 grands pôles suivants à financer ; santé (sécurité sociales, budget des hôpitaux publics, etc), enseignement, sécurité, ainsi que les subventions globales et locales. Sachant que là aussi, il y a des améliorations à apporter.&lt;/p&gt;
&lt;p&gt;En tout cas, vu le niveau de complexité de notre système actuel, vu la dette du pays, vu la difficulté de monter une entreprise, vu l'absence de travail pour tous — qui continuera de s'accentuer il ne faut pas se leurrer — vu les problèmes des retraites, vu le nombre de démunis — sans abri mais pas que, mal logé, mal nourri, ... — vu notre système piloté par des politiciens qui se passent le flambeau à tour de rôle et &lt;strong&gt;l'exaspération de la population à payer pour entretenir ce système&lt;/strong&gt;, il serait peut être tant de faire quelque chose : &lt;strong&gt;mettre en place un système qui entretienne sa population.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ec.europa.eu/citizens-initiative/REQ-ECI-2012-000028/public/index.do?uid=1379842660632&amp;amp;oct_path=%2Fsignup.do&amp;amp;initiativeLang=fr&amp;amp;oct_system_state=OPERATIONAL&amp;amp;oct_collector_state=true&amp;amp;currentLanguage=fr&amp;amp;showMap=true"&gt;Cela vaut le coup d'essayer&lt;/a&gt;, ne rien faire, ne rien proposer, c'est accepter notre situation.&lt;/p&gt;</summary><category term="réflexion"></category><category term="RBI"></category><category term="économie"></category></entry><entry><title>Publication of this blog theme: Pelican JST</title><link href="http://www.jeromesteunou.net/publication-of-this-blog-theme-pelican-jst.html" rel="alternate"></link><updated>2013-09-10T00:00:00+02:00</updated><author><name>Jérôme Steunou</name></author><id>tag:www.jeromesteunou.net,2013-09-10:publication-of-this-blog-theme-pelican-jst.html</id><summary type="html">&lt;p&gt;&lt;em&gt;Version française &lt;a href="./publication-of-this-blog-theme-pelican-jst-fr.html"&gt;ici&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Today I took the time to clean up my theme and published it on my &lt;a href="https://github.com/JSteunou/pelican-jst"&gt;Github account&lt;/a&gt;. It is on BSD License so everybody can use it. Moreover it comes with my little side project: &lt;a href="http://www.jeromesteunou.net/pages/comimoc.html"&gt;Comimoc&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As you may already know, this blog is built with Pelican, which I am very pleased about (kudos &lt;a href="http://blog.notmyidea.org"&gt;Alexis&lt;/a&gt;), and hosted on Github Pages. Both work like a breeze together and it is just fun to write and publish. I had some time to make a proper theme, — it is alright if you do not like it, I am not a designer — and as I finished the basic of &lt;a href="http://www.jeromesteunou.net/pages/comimoc.html"&gt;Comimoc&lt;/a&gt; and integrated it to this theme, I am now ready to publish it.&lt;/p&gt;
&lt;p&gt;I am not expecting you to use it as it is, I know a theme for a blog is very personal, that is why I made my own. But the CSS can be easily changed and it provides some structure and example about how to use &lt;a href="http://www.jeromesteunou.net/pages/comimoc.html"&gt;Comimoc&lt;/a&gt; easily with Pelican. So, done, it is on &lt;a href="https://github.com/JSteunou/pelican-jst"&gt;Github&lt;/a&gt; with a BSD License, you can fork, copy, do whatever you want. Just happy to help!&lt;/p&gt;</summary><category term="pelican-jst"></category><category term="comimoc"></category></entry><entry><title>Publication du thème de ce blog : Pelican JST</title><link href="http://www.jeromesteunou.net/publication-of-this-blog-theme-pelican-jst-fr.html" rel="alternate"></link><updated>2013-09-10T00:00:00+02:00</updated><author><name>Jérôme Steunou</name></author><id>tag:www.jeromesteunou.net,2013-09-10:publication-of-this-blog-theme-pelican-jst-fr.html</id><summary type="html">&lt;p&gt;Aujourd'hui j'ai pris le temps de mettre au propre mon thème et de la publier sur mon &lt;a href="https://github.com/JSteunou/pelican-jst"&gt;compte Github&lt;/a&gt;. Il est sous licence BSD, comme ça tout le monde peut l'utiliser. De plus il est fourni de base avec mon autre projet : &lt;a href="http://www.jeromesteunou.net/pages/comimoc.html"&gt;Comimoc&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Vous le savez peut être déjà, ce blog est un site static généré par Pelican, dont je suis vraiment très satisfait (kudos &lt;a href="http://blog.notmyidea.org"&gt;Alexis&lt;/a&gt;), et hébergé sur Github Pages. Les deux fonctionnent vraiment bien ensemble et c'est vraiment agréable à utiliser pour rédiger et publier des articles. Comme j'ai eu un peu de temps pour me faire mon propre thème, — vous avez le droit de ne pas l'aimer, je ne suis pas designer — que j'ai fini la version de base de &lt;a href="http://www.jeromesteunou.net/pages/comimoc.html"&gt;Comimoc&lt;/a&gt; et que je l'ai intégrée à ce thème, je le considère comme prêt à être publiée.&lt;/p&gt;
&lt;p&gt;Je ne m'attend pas à ce que vous l'utlisez tel qu'il est, un thème de blog est quelque chose de personnel, c'est bien pour ça que j'ai fait le mien. Mais la CSS peut être modifiée facilement et surtout le thème fournie une structure de base et un example d'utilisation de &lt;a href="http://www.jeromesteunou.net/pages/comimoc.html"&gt;Comimoc&lt;/a&gt; avec Pelican. Donc voilà, c'est sur &lt;a href="https://github.com/JSteunou/pelican-jst"&gt;Github&lt;/a&gt; sous licence BSD, vous pouvez forker, copier, en faire ce que vous voulez. Content d'aider !&lt;/p&gt;</summary><category term="pelican-jst"></category><category term="comimoc"></category></entry><entry><title>Ce blog est hébergé sur Github Pages</title><link href="http://www.jeromesteunou.net/ce-blog-est-heberge-sur-github-pages-fr.html" rel="alternate"></link><updated>2013-09-09T00:00:00+02:00</updated><author><name>Jérôme Steunou</name></author><id>tag:www.jeromesteunou.net,2013-09-09:ce-blog-est-heberge-sur-github-pages-fr.html</id><summary type="html">&lt;p&gt;Quand je me suis lancé avec ce blog, j'avais été inspiré par un article de &lt;a href="https://nicolas.perriault.net/code/2012/dead-easy-yet-powerful-static-website-generator-with-flask/"&gt;Nicolas Perriault&lt;/a&gt; et comme je connais bien Flask j'étais parti dans l'idée de faire à peu près la même chose, et d'héberger la version static du blog sur &lt;a href="/heberger-son-site-sur-dropbox.html"&gt;Dropbox, avec dossier public toussa toussa&lt;/a&gt;. J'avais une première version un peu bancale mais ça pouvait marcher. Bizarrement j'avais complètement zappé le système &lt;a href="http://pages.github.com/"&gt;Github Pages&lt;/a&gt; et Jekyll (ou même &lt;a href="http://octopress.org/"&gt;Octopress&lt;/a&gt;). Un jour je suis retombé dessus, ça m'a rappelé &lt;a href="https://github.com/getpelican/pelican"&gt;Pelican&lt;/a&gt;, le pendant pythonique de Jekyll, créé par &lt;a href="http://blog.notmyidea.org"&gt;Alexis Métaireau&lt;/a&gt; et &lt;em&gt;paf&lt;/em&gt; ça a fait des Chocapics.&lt;/p&gt;
&lt;p&gt;En lisant la doc je me suis rendu compte que Pelican avait vraiment bien évolué par rapport à ses premières versions et qu'il couvrait presque toutes les fonctionnalités dont j'avais besoin. Du coup j'ai joué avec. En une journée j'ai basculé mes articles sous Pelican en local pour tester et surtout j'ai découvert le make file fournit de base qui permet pas mal de chose, dont publier le résultat sur &lt;a href="https://github.com/JSteunou/JSteunou.github.io"&gt;Github Pages&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ça a été comme une révélation. L'import de font Google Fonts en CSS qui ne marchaient pas via Dropbox fonctionnait ici, et surtout, le service est fait pour que vous puissiez mettre votre nom de domaine. Finit la redirection crado qui ne doit pas aider au référencement. La conclusion s'imposait d'elle même. Avec un seul outil de gestion de version je pouvais héberger et gérer mes sources pour ce blog, son thème et sa publication, et surtout avec des outils qui sont fait pour.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The right tool for the right job.&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="hosting"></category><category term="blog"></category></entry><entry><title>Réflexion sur la sécurité routière en France</title><link href="http://www.jeromesteunou.net/la-france-et-la-s%C3%A9curit%C3%A9-routi%C3%A8re-fr.html" rel="alternate"></link><updated>2013-08-29T00:00:00+02:00</updated><author><name>Jérôme Steunou</name></author><id>tag:www.jeromesteunou.net,2013-08-29:la-france-et-la-sécurité-routière-fr.html</id><summary type="html">&lt;p&gt;Un bon gros coup de gueule aujourd'hui contre la politique de notre pays en matière de sécurité routière a.k.a. la répression contre les excès de vitesse. &lt;a href="http://voituredufutur.blogspot.fr/2013/08/reflexions-sur-lincompetence-la.html"&gt;Et je ne suis pas le seul en ce moment&lt;/a&gt;. Sérieusement, ça se limite à ça notre politique de sécurité ? J'en ai bien l'impression. Sous couvert de faire baisser le nombre de tués sur les routes, les radars automatiques ont poussés comme de la mauvaise herbe et nos ministres de l'intérieur successifs se gaussent d'une baisse continue du nombre de morts sur les routes &lt;em&gt;grâce&lt;/em&gt; aux radars (évidemment).&lt;/p&gt;
&lt;p&gt;Et si nous prenions un peu de recul ?&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.franceculture.fr/blog-en-quete-de-science-2011-06-27-4000-radars-pedagogiques-pour-eviter-4000-morts-sur-la-route.htm"&gt;Cet article&lt;/a&gt; devrait vous donner un peu de matière. Pour les flemmards, en gros, la baisse du nombre de morts sur les routes n'apparaît pas comme dépendante des radars, encore moins des différentes politiques menées. De plus cette baisse est bien plus importante que ce que nos chiffres laissent supposer si on ramène les statistiques au nombre d'automobilistes et de kilomètres parcourus et elle suit la même tendance chez nos voisins européens, qui n'ont pas forcément la même politique que la nôtre. Et si la baisse tant convoité était tout simplement due à des voitures plus sûres ? À des routes plus sûres ? Premier couac.&lt;/p&gt;
&lt;p&gt;L'autre réflexion que l'on pourrait avoir, si nous suivons nos politiques, est que si la vitesse était respectée partout, il n'y aurait plus de mort, vu que leur but est le respect des limitations de vitesses partout, pour avoir un nombre de tués le plus proche de zéro. Donc la vitesse serait la seule cause de nos accidents mortels ? Depuis quand c'est bisounoursland dans les ministères ? Vous imaginez, si à chaque fois que vous allez chez le docteur, il ne vous soignait que votre fièvre :&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ah mais monsieur, cela fait parti de la nouvelle politique d'éradication des maladies mortelles en France. Si nous limitons toutes les fièvres pour faire retomber la température à 37°C, il n'y aura plus de mort par maladie en France.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Sérieusement ?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Poussons un peu plus loin, admettons que les gens respectent tous les limitations de vitesse. Un accident à 130 ? 110 ? Ce n'est pas potentiellement mortel ? Si... Bien baissons toutes les vitesses à 50 alors, soyons fou. Une voiture à 50 contre un piéton ce n'est pas potentiellement mortel ? Si... Mince que faire. Baisser à 30 ?&lt;/p&gt;
&lt;p&gt;Autre simulation, admettons qu'il n'y a plus d'accidents mortels en France. C'est bon, vous pouvez rouler comme des connards partout, les accidents ne sont plus mortel grâce aux radars ! Ô Joie. Vous croyez que dans un pays &lt;em&gt;en crise&lt;/em&gt; (ma bonne dame, oui c'est la crise), ça fait plaisir de se faire cartonner une voiture à 10 000€, 15 000€, 20 000€ et d'en perdre la moitié parce que mal remboursée.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Je ne comprends pas monsieur l'assureur, je ne suis pas en tord, ça fait 10 ans que je suis chez vous et j'ai toujours été assuré à 100%.&lt;/p&gt;
&lt;p&gt;Ah mais monsieur l'assuré, soyez heureux, vous êtes en vie grâce aux radars ! Et nous vous remboursons votre voiture au juste prix du marché + 2 mois gratuits pour votre fidélité.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Sérieusement ?!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Alors oui les excès de vitesse sont facilement mesurables, oui il faut des sous pour les infrastructures routières et faire une nouvelle taxe moins bien déguisée aurait été plus catastrophique pour les précieux sondages. Mais tout de même... tant d'hypocrisie. Petite parenthèse, si l'état n'avait pas privatisé les réseaux autoroutiers, il aurait eu plus de sous dans la popoche pour entretenir le réseau routier, &lt;a href="http://fortune.fdesouche.com/22350-le-prodigieux-magot-des-autoroutes"&gt;10 milliards de perdu selon la Cour des Comptes&lt;/a&gt;, et pourquoi pas, mettre en place des stages de remise à niveau obligatoires, déployer une force de la route conséquente entre prévention et répression, rémunérée aussi par des amendes qui tapent dure comme aux U.S.A et au Canada, que sais-je encore...&lt;/p&gt;
&lt;p&gt;Parce que ça aurait eu de la gueule une vraie politique de sécurité pour s'occuper des vrais causes des accidents routiers, et non plus seulement des symptômes. Rien que sur mon vécu personnel je peux vous en citer quelques unes, mais la liste est très loin d'être exhaustive :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;l'incapacité : il y a des gens qui sont incapables de bien conduire et devraient sérieusement reprendre des cours tant ils sont dangereux, et pas seulement nos seniors.&lt;/li&gt;
&lt;li&gt;la somnolence : oui, les voitures ne conduisent pas encore toutes seules.&lt;/li&gt;
&lt;li&gt;alcool, drogue, médicament, ... : tout ce qui altère notre état et nous transforme en &lt;em&gt;incapable&lt;/em&gt; de la conduite en fait.&lt;/li&gt;
&lt;li&gt;l'irrespect : les gens trop macho, trop sûr d'eux, ou tout simplement con envers les autres.&lt;/li&gt;
&lt;li&gt;l'inconscience : là c'est plus dur, mais avec de l'expérience on les repère.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tous ses aspects entraînent facilement :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;le zigzag : mais si vous savez, le gars qui est devant vous et que vous avez peur de doubler parce qu'il va vous foutre dans le fossé sinon ou qui vous double mais en vous arrachant la moitié de la voiture.&lt;/li&gt;
&lt;li&gt;le non respect des distances : alors oui, appliquer à la lettre les distances de sécurité relève de l'utopie, surtout en 2x2 voies et plus. Mais de là à ne plus compter qu'en centimètres la distance entre vous et celui de devant et faire clignoter vos feux arrières comme une guirlande de Noël sous acide...&lt;/li&gt;
&lt;li&gt;les contrôles : un des plus répandu avec les conséquences les plus direct, de mon expérience. Vous n'êtes pas seul sur cette foutue 2x2 voies, et non mettre votre clignotant pour vous insérer ou pour doubler ne vous donne pas magiquement la priorité !&lt;/li&gt;
&lt;li&gt;la trajectoire tendue : souvent le même qui ne respecte pas les distances. Celui qui vous fait piler parce qu'il a bouffé la moitié de &lt;em&gt;votre&lt;/em&gt; stop en arrivant face à vous, ou qui a coupé la moitié du rond point au dernier moment pour sortir, ou encore qui a pris son virage façon Sébastien Loeb sauf que vous étiez en face...&lt;/li&gt;
&lt;li&gt;non respect du code de la route : pour résumer et surtout pour insister sur les stop et feux. Oui griller un feu rouge nuit dangereusement à votre santé.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Malheureusement pour contrôler tout ça et remettre les automobilistes dans le droit chemin, ça demande des efforts, beaucoup d'efforts, et des moyens, beaucoup de moyens. Mais en France on a des idées et peu de moyens, alors on reste cantonné à nos radars automatiques et nos discours hypocrites.&lt;/p&gt;</summary><category term="réflexion"></category><category term="coup de gueule"></category></entry><entry><title>Comment classer ses articles ?</title><link href="http://www.jeromesteunou.net/comment-classer-ses-articles-fr.html" rel="alternate"></link><updated>2013-07-29T00:00:00+02:00</updated><author><name>Jérôme Steunou</name></author><id>tag:www.jeromesteunou.net,2013-07-29:comment-classer-ses-articles-fr.html</id><summary type="html">&lt;p&gt;Simple pense bête que je partage, il pourra sûrement vous servir.&lt;/p&gt;
&lt;p&gt;Le problème quand on rédige des articles, surtout avec ce genre d'outils, c'est ; comment les classer ? On se retrouve avec des catégories et des tags. Comment ne pas mélanger les deux ? Comment réussir à bien ranger tout le monde dans les bonnes catégories et trouver les bons tags sans que ça ne devienne vite le bordel comme un week-end de grand pont ensoleillé à La Baule.&lt;/p&gt;
&lt;p&gt;Deux questions :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cet article est un ... ? (tuto ? astuce ? simple article ? coup de gueule ? ...)&lt;/li&gt;
&lt;li&gt;Ça parle de ... ? (libre ? python ? &lt;s&gt;php&lt;/s&gt; troll ? ...)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Et voilà vous avez votre catégorie et vos tags.&lt;/p&gt;
&lt;p&gt;Mais de rien.&lt;/p&gt;</summary><category term="blog"></category></entry><entry><title>Structurer son application Backbone.js / Marionette.js (part. 1)</title><link href="http://www.jeromesteunou.net/structurer-son-app-backbone.js-marionette.js-fr.html" rel="alternate"></link><updated>2013-07-21T00:00:00+02:00</updated><author><name>Jérôme Steunou</name></author><id>tag:www.jeromesteunou.net,2013-07-21:structurer-son-app-backbone.js-marionette.js-fr.html</id><summary type="html">&lt;h2&gt;Comment bien commencer avec Backbone.js / Marionette.js ?&lt;/h2&gt;
&lt;p&gt;Je vais passer le pourquoi du comment Backbone.js et Marionette.js, qui est pour moi un couple JS qui fonctionne très très bien pour le dev côté front-end. Si vous êtes arrivé ici, je considère que vous en connaissez un minimum sur ces &lt;abbr title="Framework"&gt;FW&lt;/abbr&gt;, au moins les concepts de &lt;code&gt;Model Collection View Router&lt;/code&gt; propres à Backbone.js.&lt;/p&gt;
&lt;p&gt;Le but de cet article est de vous montrer ce que j'utilise comme structure pour débuter une application avec Marionette.js. Ça vous aidera sûrement pour débuter avec ce framework, bien que la &lt;a href="https://github.com/marionettejs/backbone.marionette/tree/master/docs"&gt;doc officielle&lt;/a&gt; soit déjà pas mal foutue.&lt;/p&gt;
&lt;h2&gt;Faut-il utiliser Require.js ?&lt;/h2&gt;
&lt;p&gt;La grande question quand on commence à vouloir structurer son application JavaScript et qu'on veut bien faire, comprendre, comme dans la plupart des tutos bien balèzes. Je suis passé par là, j'ai testé, et finalement j'ai tout pété. &lt;a href="http://en.wikipedia.org/wiki/KISS_principle"&gt;Pourquoi faire compliqué quand on peut faire simple&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Donc, non vous n'êtes pas obligé : pour une application vraiment grande (mais vraiment hein), vous pouvez commencer à en ressentir le besoin. Un peu comme Gmail qui vous charge d'abord le module pour les mails, puis les contacts, le chat, etc. Mais sur une application Marionette, avec les librairies quivontbien, les classiques jQuery(UI) + 3, 4 librairies JS histoire ne pas ré-inventer la roue, quand vous aurez tout assemblé et minifié, vous n'aurez plus qu'un fichier JS et quelques libs chargées via CDN dans 90% des cas. Donc dans 90% des cas Require.js est inutile.&lt;/p&gt;
&lt;p&gt;De plus Marionette utilise deux concepts pour vous aider à structurer votre code et instancier l'ensemble : l'&lt;a href="https://github.com/marionettejs/backbone.marionette/blob/master/docs/marionette.application.md"&gt;application&lt;/a&gt; et les &lt;a href="https://github.com/marionettejs/backbone.marionette/blob/master/docs/marionette.application.module.md"&gt;modules&lt;/a&gt;. Si vous avez fait un peu de Django par exemple, ça vous ne sera pas étranger. L'application sera votre bootstrap, votre chef d'orchestre, alors que vos modules seront en fait vos mini-applications. Donc d'emblée, Marionette vous pousse au &lt;strong&gt;découpage&lt;/strong&gt; et &lt;strong&gt;découplage&lt;/strong&gt;, bien !&lt;/p&gt;
&lt;h2&gt;L'objet Marionette.Application&lt;/h2&gt;
&lt;p&gt;Regardons ensemble ce que nous pouvons faire avec :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;myApp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Backbone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Marionette&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;L'instancier... euh ok&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;myApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addInitializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="c1"&gt;// do useful stuff here&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;myView&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MyView&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;someModel&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;myApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mainRegion&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;show&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myView&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;myApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addInitializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;myAppRouter&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;Backbone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;history&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ajouter des &lt;code&gt;initializer&lt;/code&gt;... aaah pas mal. C'est simple, mais efficace. Quand votre application démarre, elle appelle les initializer, et dans l'ordre d'ajout s'il vous plaît. Si vous avez des outils, contrôleur, routeur, etc, à initialiser quand l'application se lance, c'est ici, tout simplement.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Et comment lance-t-on l'application ? Et les &lt;code&gt;options&lt;/code&gt; que je vois dans tes callbacks elles sortent d'où ?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Taratataaa, rien de plus simple&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;myApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bar&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Et pour les cas vraiment complexes où vous auriez un bootstrap par dessus ce bootstrap, vous pouvez même modifier les options juste avant les &lt;code&gt;initializer&lt;/code&gt; ou lancer des actions. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;myApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;initialize:before&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;moreData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Yo dawg, I heard you like options so I put some options in your options!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Vous remarquerez la méthode &lt;code&gt;on()&lt;/code&gt; qui sert à inscrire une callback à un événement donné. Vous retrouvez ce principe dans Backbone.js et Marionette.js, ainsi que son &lt;em&gt;inverse&lt;/em&gt; &lt;a href="http://backbonejs.org/#Events-listenTo"&gt;&lt;code&gt;listenTo()&lt;/code&gt;&lt;/a&gt; qui sera souvent plus approprié dans une vue.&lt;/p&gt;
&lt;p&gt;Vous avez accès à trois d'événements depuis l'application :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;initialize:before&lt;/code&gt; / &lt;code&gt;onInitializeBefore&lt;/code&gt; : levé juste avant que les initializers soient lancé&lt;/li&gt;
&lt;li&gt;&lt;code&gt;initialize:after&lt;/code&gt; / &lt;code&gt;onInitializeAfter&lt;/code&gt; : levé juste après la fin initializers&lt;/li&gt;
&lt;li&gt;&lt;code&gt;start&lt;/code&gt; / &lt;code&gt;onStart&lt;/code&gt; : au vrai début de l'application, donc après les initializers, et les événements des initializers.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Non aux variables globales&lt;/h2&gt;
&lt;p&gt;Avant de passer à la suite, récapitulons ce que donne notre application, encapsulé dans une &lt;a href="http://en.wikipedia.org/wiki/Immediately-invoked_function_expression"&gt;IIFE&lt;/a&gt; et ajoutée dans un namespace qui sera notre &lt;strong&gt;seule&lt;/strong&gt; variable globale.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;MyNamespace&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myApp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Backbone&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Marionette&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Handlebars&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;etc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;myApp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Backbone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Marionette&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="nx"&gt;myApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addInitializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="c1"&gt;// do useful stuff here&lt;/span&gt;
    &lt;span class="c1"&gt;// like maybe configure Handlebars&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;myApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addInitializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="c1"&gt;// inside an initializer `this` is the app&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;MyNamespace&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;Backbone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;history&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;myApp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;}(&lt;/span&gt;&lt;span class="nx"&gt;Backbone&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Marionette&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Handlebars&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;etc&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;MyNamespace&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myApp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;someOptions&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ça sera tout pour cette partie. Je vais découper le tuto en 3 ou 4 partie vu le temps que ça me prend.&lt;/p&gt;</summary><category term="javascript"></category><category term="backbone.js"></category><category term="marionette.js"></category></entry></feed>